/**
 * Script de migration : 'sur-mesure' ‚Üí 'personnalise'
 */
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function migrateTypes() {
  try {
    console.log('üöÄ D√©but de la migration des types de programmes...');

    // Mettre √† jour tous les programmes 'sur-mesure' vers 'personnalise'
    const result = await prisma.programmeFormation.updateMany({
      where: {
        type: 'sur-mesure'
      },
      data: {
        type: 'personnalise'
      }
    });

    console.log(`‚úÖ Migration termin√©e : ${result.count} programmes mis √† jour`);

    // V√©rifier le r√©sultat
    const catalogueCount = await prisma.programmeFormation.count({
      where: { type: 'catalogue' }
    });
    const personnaliseCount = await prisma.programmeFormation.count({
      where: { type: 'personnalise' }
    });

    console.log(`üìä R√©sultat :`);
    console.log(`  - Programmes catalogue : ${catalogueCount}`);
    console.log(`  - Programmes personnalis√©s : ${personnaliseCount}`);

  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
  } finally {
    await prisma.$disconnect();
  }
}

migrateTypes();